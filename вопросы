1. Методы Object
- getClass - Получает класс объекта во время выполнения
- hashcode - Возвращает хеш-код, ассоциированный с вызывающим объектом
- equals - Определяет, равен ли один объект другому
- clone - Создает новый объект, который совпадает с клонируемым объектом
- toString - Возвращает строку, которая описывает объект
- notify - Возобновляет выполнение потока, ожидающего вызывающий объект
- notifyAll - Возобновляет выполнение всех потоков, ожидающих вызывающий объект
- wait - Ожидает другого потока выполнения
2.Методы класса Object equals() и hashCode()

3.Метод класса Object hashCode()На основании чего определяется для экземпляра класса Object
- класса Object
4.Метод класса Object equals()На основании чего определяется для экземпляра класса Object
- класса Object
5== vs equals()Что сравнивается?
- по дефолту оба сравнивают ссылки на объект(адреса в памяти)
6.Интерфейсы vs Абстрактный класс.Чётко знать определение, плюсы и минусы каждой из этих сущностей
- Интерфейсы это абстрактный тип, который используется для объявления поведения, которое должны реализовать классы
- Абстрактный класс - базовый класс, который не предполагает создания экземпляров
плюсы и минусы:
- интерфейс только поведение. у абстрактного класса есть и состояние(переменные, не константы)
- абстракт классы, связывают между собой и объединяют классы которые имеют связь, интерфейсы нет.
- разница в наследовании
/////
- интерфейс описывает поведение и реализовывать его могут абсолютно не родственные объекты, например интерфейс Flyable с методом летать могут реализовывать классы
и комар и самолёт, хотя они никак не связаны. Абстрактный класс показывает что-то общее для всех его наследников, самый распространённый пример - абстрактный класс
Figure(который реально существовать не может) у которого есть методы для нахождения площади и периметра, что является общим для всех геометрических  фигур.
7.Переменные в интерфейсах.Какие модификаторы ставятся по умолчанию.
public static final
8.Методы в интерфейсах. Какой модификатор доступа.Default методы
- методы интерфейса неявно абстрактные
- static методы, private
- по умолчанию они default, что означает что тело метода может быть реализованно в интерфейсе.
9.Ключевое слово static.К чему применяется, что означает
- static класс можно использовать без объекта
- поля которые статик не переходят объекту
- методы статик могу вызывать только другие статик методы своего класса
- методы статик напрямую могут получать доступ только к статическим переменным своего класса
- внутри статического метода нельзя ссылать на this и super
- статический метод нельзя переопределить
- Статическим классом может быть только внутренний класс. если внешний наследуется другим классом, то этот не будет наследован.
10.Ключевое слово final.К чему применяется, что означает
- final может быть переменная, метод, класс
- значение final переменной не может быть измененно
- метод final нельзя переопределить подклассом
- класс final не может быть расширен подклассом
11.Примитивные типы данных.Что это такое, сколько их, размеры каждого
- byte -128 - 127
- short - -32768 - 32768
- int -2*10"9 - 2*10"9
- long -9*10"18 - 9*10"18
- float -10"38 - 10"38
- double -10"308 - -10"308
- boolean - true,false
- char 0-65 535
